// Code generated by goctl. DO NOT EDIT.
package types

type BuildPlan struct {
	ID         string `json:"id"`
	Name       string `json:"name"`
	ProjectID  string `json:"project_id"`
	Context    string `json:"context"`
	Dockerfile string `json:"docker_file"`
	Version    string `json:"version"`
	Tag        string `json:"tag"`
}

type GetBuildPlanReq struct {
	Id string `json:"id"`
}

type GetBuildPlanReply struct {
	Result BuildPlan `json:"result"`
}

type AddBuildPlanReq struct {
	Name       string `json:"name"`
	ProjectID  string `json:"project_id"`
	Context    string `json:"context"`
	Dockerfile string `json:"docker_file"`
	Version    string `json:"version"`
}

type AddBuildPlanReply struct {
	Id  string `json:"id"`
	Tag string `json:"tag"`
}

type UpdateBuildPlanReq struct {
	Id         string `json:"id"`
	Name       string `json:"name"`
	Context    string `json:"context"`
	Dockerfile string `json:"docker_file"`
	Version    string `json:"version"`
}

type UpdateBuildPlanReply struct {
	Result bool   `json:"result"`
	Tag    string `json:"tag"`
}

type DeleteBuildPlanReq struct {
	Id string `json:"id"`
}

type DeleteBuildPlanReply struct {
	Result bool `json:"result"`
}

type ListBuildPlanReq struct {
	ProjectID string `json:"project_id"`
}

type ListBuildPlanReply struct {
	Count  int64       `json:"count"`
	Result []BuildPlan `json:"result"`
}

type User struct {
	ID      string `json:"id"`
	Email   string `json:"email"`
	Account string `json:"account"`
	Name    string `json:"name"`
	Bio     string `json:"bio"`
}

type Image struct {
	ID          string `json:"id"`
	CreatedAt   int64  `json:"created_at"`
	UpdatedAt   int64  `json:"updated_at"`
	Name        string `json:"name"`
	ImageID     string `json:"image_id"`
	ProjectID   string `json:"project_id"`
	BuildPlanID string `json:"build_plan_id"`
	BuilderID   string `json:"builder_id"`
	Builder     User   `json:"builder"`
}

type GetImageReq struct {
	ID string `json:"id"`
}

type GetImageReply struct {
	Result Image `json:"result"`
}

type ListImageReq struct {
	ProjectID string `json:"project_id"`
}

type ListImageReply struct {
	Count  int64   `json:"count"`
	Result []Image `json:"result"`
}

type DeleteImageReq struct {
	ID string `json:"id"`
}

type DeleteImageReply struct {
	Result bool `json:"result"`
}
