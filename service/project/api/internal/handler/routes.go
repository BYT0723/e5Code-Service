// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	"e5Code-Service/service/project/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.LoadValue},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/project/getProject",
					Handler: getProjectHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/project/getProjectAuth",
					Handler: getProjectAuthHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/project/addProject",
					Handler: addProjectHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/project/updateProject",
					Handler: updateProjectHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/project/deleteProject",
					Handler: deleteProjectHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/project/listProject",
					Handler: listProjectHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/project/listProjectFiles",
					Handler: listProjectFilesHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/project/listProjectAllFiles",
					Handler: listProjectAllFilesHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/project/createFile",
					Handler: createFileHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/project/readFile",
					Handler: readFileHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/project/updateFile",
					Handler: updateFileHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/project/deleteFile",
					Handler: deleteFileHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/project/moveFile",
					Handler: moveFileHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/project/mkDir",
					Handler: mkDirHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/project/workStatus",
					Handler: workStatusHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/project/commit",
					Handler: commitHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/project/addUser",
					Handler: addUserHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/project/removeUser",
					Handler: removeUserHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/project/moidfyPermission",
					Handler: modifyPermissionHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
	)
}
