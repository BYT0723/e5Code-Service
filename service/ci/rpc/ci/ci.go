// Code generated by goctl. DO NOT EDIT!
// Source: ci.proto

package ci

import (
	"context"

	"e5Code-Service/service/ci/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	BuildReq = pb.BuildReq
	BuildRsp = pb.BuildRsp

	Ci interface {
		BuildImage(ctx context.Context, in *BuildReq, opts ...grpc.CallOption) (*BuildRsp, error)
	}

	defaultCi struct {
		cli zrpc.Client
	}
)

func NewCi(cli zrpc.Client) Ci {
	return &defaultCi{
		cli: cli,
	}
}

func (m *defaultCi) BuildImage(ctx context.Context, in *BuildReq, opts ...grpc.CallOption) (*BuildRsp, error) {
	client := pb.NewCiClient(m.cli.Conn())
	return client.BuildImage(ctx, in, opts...)
}
