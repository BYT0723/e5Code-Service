type (
	User {
		ID      string `json:"id"`
		Email   string `json:"email"`
		Account string `json:"account"`
		Name    string `json:"name"`
	}
	LoginReq {
		Email    string `json:"email"`
		Password string `json:"password"`
	}
	LoginReply {
		Id           string `json:"id"`
		AccessToken  string `json:"access_token"`
		AccessExpire int64  `json:"access_expire"`
	}
	RegisterUserReq {
		Email    string `json:"email"`
		Account  string `json:"account"`
		Name     string `json:"name"`
		Password string `json:"password"`
	}
	RegisterUserReply {
		Id string `json:"id"`
	}
	UpdateUserReq {
		Id       string `json:"id"`
		Name     string `json:"name,optional"`
		Password string `json:"password,optional"`
	}
	UpdateUserReply {
		Result bool `json:"result"`
	}
	DeleteUserReq {
		Id string `json:"id"`
	}
	DeleteUserReply {
		Result bool `json:"result"`
	}

	UserInfoReq {
		Id string `json:"id"`
	}
	UserInfoReply {
		Id      string `json:"id"`
		Email   string `json:"email"`
		Account string `json:"account"`
		Name    string `json:"Name"`
	}
	GetPermissionReq {
		UserID    string `json:"user_id"`
		ProjectID string `json:"project_id"`
	}
	GetPermissionReply {
		Permission int64 `json:"permission"`
	}
	SetPermissionReq {
		UserID     string `json:"user_id"`
		ProjectID  string `json:"project_id"`
		Permission int64  `json:"permission"`
	}
	SetPermissionReply {
		Result bool `json:"result"`
	}
)

@server(
	jwt: Auth
)
service user-api {
	@handler updateUser
	post /user/updateUser(UpdateUserReq) returns(UpdateUserReply)
	@handler deleteUser
	post /user/deleteUser(DeleteUserReq) returns(DeleteUserReply)
	@handler userInfo
	post /user/userInfo(UserInfoReq) returns(UserInfoReply)
	@handler getPermission
	post /user/getPermission(GetPermissionReq) returns(GetPermissionReply)
	@handler setPermission
	post /user/setPermission(SetPermissionReq) returns(SetPermissionReply)
}

service user-api {
	@handler login
	post /user/login(LoginReq) returns(LoginReply)
	@handler registerUser
	post /user/registerUser(RegisterUserReq) returns(RegisterUserReply)
}