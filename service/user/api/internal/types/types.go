// Code generated by goctl. DO NOT EDIT.
package types

type User struct {
	ID      string `json:"id"`
	Email   string `json:"email"`
	Account string `json:"account"`
	Name    string `json:"name"`
	Bio     string `json:"bio"`
}

type LoginReq struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

type LoginReply struct {
	Id           string `json:"id"`
	Account      string `json:"account"`
	Name         string `json:"name"`
	AccessToken  string `json:"access_token"`
	AccessExpire int64  `json:"access_expire"`
}

type RegisterUserReq struct {
	Email    string `json:"email"`
	Account  string `json:"account"`
	Name     string `json:"name"`
	Password string `json:"password"`
	Bio      string `json:"bio,optional"`
}

type RegisterUserReply struct {
	Id string `json:"id"`
}

type UpdateUserReq struct {
	Id       string `json:"id"`
	Name     string `json:"name,optional"`
	Password string `json:"password,optional"`
	Bio      string `json:"bio,optional"`
}

type UpdateUserReply struct {
	Result bool `json:"result"`
}

type DeleteUserReq struct {
	Id string `json:"id"`
}

type DeleteUserReply struct {
	Result bool `json:"result"`
}

type UserInfoReq struct {
	Id string `json:"id"`
}

type UserInfoByEmailReq struct {
	Email string `json:"email"`
}

type UserInfoReply struct {
	Id      string `json:"id"`
	Email   string `json:"email"`
	Account string `json:"account"`
	Name    string `json:"name"`
	Bio     string `json:"bio"`
}

type GetPermissionReq struct {
	UserID    string `json:"user_id"`
	ProjectID string `json:"project_id"`
}

type GetPermissionReply struct {
	Permission int64 `json:"permission"`
}

type SetPermissionReq struct {
	UserID     string `json:"user_id"`
	ProjectID  string `json:"project_id"`
	Permission int64  `json:"permission"`
}

type SetPermissionReply struct {
	Result bool `json:"result"`
}

type ListUserReq struct {
	IDs []string `json:"ids"`
}

type ListUserReply struct {
	Count  int64  `json:"count"`
	Result []User `json:"result"`
}

type DeletePermissionReq struct {
	UserID    string `json:"user_id,optional"`
	ProjectID string `json:"project_id,optional"`
}

type DeletePermissionReply struct {
	Result bool `json:"result"`
}

type PermissionInfo struct {
	User       User  `json:"user"`
	Permission int64 `json:"permission"`
}

type GetPermissionsReq struct {
	ProjectID  string `json:"project_id"`
	Permission int64  `json:"permission"`
}

type GetPermissionsReply struct {
	Count  int64            `json:"count"`
	Result []PermissionInfo `json:"result"`
}
