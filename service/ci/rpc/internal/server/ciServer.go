// Code generated by goctl. DO NOT EDIT!
// Source: ci.proto

package server

import (
	"context"

	"e5Code-Service/service/ci/rpc/internal/logic"
	"e5Code-Service/service/ci/rpc/internal/svc"
	"e5Code-Service/service/ci/rpc/pb"
)

type CiServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedCiServer
}

func NewCiServer(svcCtx *svc.ServiceContext) *CiServer {
	return &CiServer{
		svcCtx: svcCtx,
	}
}

func (s *CiServer) GetBuildPlan(ctx context.Context, in *pb.GetBuildPlanReq) (*pb.GetBuildPlanRsp, error) {
	l := logic.NewGetBuildPlanLogic(ctx, s.svcCtx)
	return l.GetBuildPlan(in)
}

func (s *CiServer) AddBuildPlan(ctx context.Context, in *pb.AddBuildPlanReq) (*pb.AddBuildPlanRsp, error) {
	l := logic.NewAddBuildPlanLogic(ctx, s.svcCtx)
	return l.AddBuildPlan(in)
}

func (s *CiServer) UpdateBuildPlan(ctx context.Context, in *pb.UpdateBuildPlanReq) (*pb.UpdateBuildPlanRsp, error) {
	l := logic.NewUpdateBuildPlanLogic(ctx, s.svcCtx)
	return l.UpdateBuildPlan(in)
}

func (s *CiServer) DeleteBuildPlan(ctx context.Context, in *pb.DeleteBuildPlanReq) (*pb.DeleteBuildPlanRsp, error) {
	l := logic.NewDeleteBuildPlanLogic(ctx, s.svcCtx)
	return l.DeleteBuildPlan(in)
}

func (s *CiServer) ListBuildPlan(ctx context.Context, in *pb.ListBuildPlanReq) (*pb.ListBuildPlanRsp, error) {
	l := logic.NewListBuildPlanLogic(ctx, s.svcCtx)
	return l.ListBuildPlan(in)
}

func (s *CiServer) BuildImage(in *pb.BuildReq, stream pb.Ci_BuildImageServer) error {
	l := logic.NewBuildImageLogic(stream.Context(), s.svcCtx)
	return l.BuildImage(in, stream)
}

func (s *CiServer) GetImage(ctx context.Context, in *pb.GetImageReq) (*pb.GetImageRsp, error) {
	l := logic.NewGetImageLogic(ctx, s.svcCtx)
	return l.GetImage(in)
}

func (s *CiServer) ListImage(ctx context.Context, in *pb.ListImageReq) (*pb.ListImageRsp, error) {
	l := logic.NewListImageLogic(ctx, s.svcCtx)
	return l.ListImage(in)
}

func (s *CiServer) DeleteImage(ctx context.Context, in *pb.DeleteImageReq) (*pb.DeleteImageRsp, error) {
	l := logic.NewDeleteImageLogic(ctx, s.svcCtx)
	return l.DeleteImage(in)
}
