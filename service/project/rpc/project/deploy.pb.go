// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: deploy.proto

package project

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Deploy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedTime  *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=createdTime,proto3" json:"createdTime,omitempty"`
	UpdatedTime  *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updatedTime,proto3" json:"updatedTime,omitempty"`
	Name         string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Url          string                 `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	ProjectID    string                 `protobuf:"bytes,6,opt,name=projectID,proto3" json:"projectID,omitempty"`
	Environments string                 `protobuf:"bytes,7,opt,name=environments,proto3" json:"environments,omitempty"`
}

func (x *Deploy) Reset() {
	*x = Deploy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deploy_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deploy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deploy) ProtoMessage() {}

func (x *Deploy) ProtoReflect() protoreflect.Message {
	mi := &file_deploy_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deploy.ProtoReflect.Descriptor instead.
func (*Deploy) Descriptor() ([]byte, []int) {
	return file_deploy_proto_rawDescGZIP(), []int{0}
}

func (x *Deploy) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Deploy) GetCreatedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedTime
	}
	return nil
}

func (x *Deploy) GetUpdatedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedTime
	}
	return nil
}

func (x *Deploy) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Deploy) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Deploy) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *Deploy) GetEnvironments() string {
	if x != nil {
		return x.Environments
	}
	return ""
}

type GetDeployReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetDeployReq) Reset() {
	*x = GetDeployReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deploy_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeployReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeployReq) ProtoMessage() {}

func (x *GetDeployReq) ProtoReflect() protoreflect.Message {
	mi := &file_deploy_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeployReq.ProtoReflect.Descriptor instead.
func (*GetDeployReq) Descriptor() ([]byte, []int) {
	return file_deploy_proto_rawDescGZIP(), []int{1}
}

func (x *GetDeployReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetDeployRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Deploy `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GetDeployRsp) Reset() {
	*x = GetDeployRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deploy_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeployRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeployRsp) ProtoMessage() {}

func (x *GetDeployRsp) ProtoReflect() protoreflect.Message {
	mi := &file_deploy_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeployRsp.ProtoReflect.Descriptor instead.
func (*GetDeployRsp) Descriptor() ([]byte, []int) {
	return file_deploy_proto_rawDescGZIP(), []int{2}
}

func (x *GetDeployRsp) GetResult() *Deploy {
	if x != nil {
		return x.Result
	}
	return nil
}

type AddDeployReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Url          string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	ProjectID    string `protobuf:"bytes,3,opt,name=projectID,proto3" json:"projectID,omitempty"`
	Environments string `protobuf:"bytes,4,opt,name=environments,proto3" json:"environments,omitempty"`
}

func (x *AddDeployReq) Reset() {
	*x = AddDeployReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deploy_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDeployReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDeployReq) ProtoMessage() {}

func (x *AddDeployReq) ProtoReflect() protoreflect.Message {
	mi := &file_deploy_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDeployReq.ProtoReflect.Descriptor instead.
func (*AddDeployReq) Descriptor() ([]byte, []int) {
	return file_deploy_proto_rawDescGZIP(), []int{3}
}

func (x *AddDeployReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddDeployReq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *AddDeployReq) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *AddDeployReq) GetEnvironments() string {
	if x != nil {
		return x.Environments
	}
	return ""
}

type AddDeployRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Deploy `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *AddDeployRsp) Reset() {
	*x = AddDeployRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deploy_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDeployRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDeployRsp) ProtoMessage() {}

func (x *AddDeployRsp) ProtoReflect() protoreflect.Message {
	mi := &file_deploy_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDeployRsp.ProtoReflect.Descriptor instead.
func (*AddDeployRsp) Descriptor() ([]byte, []int) {
	return file_deploy_proto_rawDescGZIP(), []int{4}
}

func (x *AddDeployRsp) GetResult() *Deploy {
	if x != nil {
		return x.Result
	}
	return nil
}

type UpdateDeployReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *Deploy `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *UpdateDeployReq) Reset() {
	*x = UpdateDeployReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deploy_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeployReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeployReq) ProtoMessage() {}

func (x *UpdateDeployReq) ProtoReflect() protoreflect.Message {
	mi := &file_deploy_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeployReq.ProtoReflect.Descriptor instead.
func (*UpdateDeployReq) Descriptor() ([]byte, []int) {
	return file_deploy_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateDeployReq) GetPayload() *Deploy {
	if x != nil {
		return x.Payload
	}
	return nil
}

type UpdateDeployRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *UpdateDeployRsp) Reset() {
	*x = UpdateDeployRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deploy_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeployRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeployRsp) ProtoMessage() {}

func (x *UpdateDeployRsp) ProtoReflect() protoreflect.Message {
	mi := &file_deploy_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeployRsp.ProtoReflect.Descriptor instead.
func (*UpdateDeployRsp) Descriptor() ([]byte, []int) {
	return file_deploy_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateDeployRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type DeleteDeployReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteDeployReq) Reset() {
	*x = DeleteDeployReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deploy_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDeployReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDeployReq) ProtoMessage() {}

func (x *DeleteDeployReq) ProtoReflect() protoreflect.Message {
	mi := &file_deploy_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDeployReq.ProtoReflect.Descriptor instead.
func (*DeleteDeployReq) Descriptor() ([]byte, []int) {
	return file_deploy_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteDeployReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteDeployRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DeleteDeployRsp) Reset() {
	*x = DeleteDeployRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deploy_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDeployRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDeployRsp) ProtoMessage() {}

func (x *DeleteDeployRsp) ProtoReflect() protoreflect.Message {
	mi := &file_deploy_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDeployRsp.ProtoReflect.Descriptor instead.
func (*DeleteDeployRsp) Descriptor() ([]byte, []int) {
	return file_deploy_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteDeployRsp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

var File_deploy_proto protoreflect.FileDescriptor

var file_deploy_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfc, 0x01, 0x0a, 0x06, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x1e, 0x0a, 0x0c, 0x67, 0x65, 0x74, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x37, 0x0a, 0x0c, 0x67, 0x65, 0x74, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x52, 0x73, 0x70, 0x12, 0x27, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x76, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x52, 0x65, 0x71,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x37, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x52, 0x73, 0x70, 0x12, 0x27, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x3c, 0x0a, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x52, 0x65, 0x71, 0x12, 0x29, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22,
	0x29, 0x0a, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x52,
	0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x21, 0x0a, 0x0f, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x29, 0x0a,
	0x0f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x52, 0x73, 0x70,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0x86, 0x02, 0x0a, 0x06, 0x64, 0x65, 0x70,
	0x6f, 0x6c, 0x79, 0x12, 0x39, 0x0a, 0x09, 0x67, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x6c, 0x79,
	0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x67, 0x65, 0x74, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x2e, 0x67, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x52, 0x73, 0x70, 0x12, 0x39,
	0x0a, 0x09, 0x61, 0x64, 0x64, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x12, 0x15, 0x2e, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x61, 0x64, 0x64, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x52,
	0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x61, 0x64, 0x64,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x52, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x0c, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x52, 0x73, 0x70, 0x12, 0x42, 0x0a,
	0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x12, 0x18, 0x2e,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x2e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x52, 0x73,
	0x70, 0x42, 0x09, 0x5a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_deploy_proto_rawDescOnce sync.Once
	file_deploy_proto_rawDescData = file_deploy_proto_rawDesc
)

func file_deploy_proto_rawDescGZIP() []byte {
	file_deploy_proto_rawDescOnce.Do(func() {
		file_deploy_proto_rawDescData = protoimpl.X.CompressGZIP(file_deploy_proto_rawDescData)
	})
	return file_deploy_proto_rawDescData
}

var file_deploy_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_deploy_proto_goTypes = []interface{}{
	(*Deploy)(nil),                // 0: project.Deploy
	(*GetDeployReq)(nil),          // 1: project.getDeployReq
	(*GetDeployRsp)(nil),          // 2: project.getDeployRsp
	(*AddDeployReq)(nil),          // 3: project.addDeployReq
	(*AddDeployRsp)(nil),          // 4: project.addDeployRsp
	(*UpdateDeployReq)(nil),       // 5: project.updateDeployReq
	(*UpdateDeployRsp)(nil),       // 6: project.updateDeployRsp
	(*DeleteDeployReq)(nil),       // 7: project.deleteDeployReq
	(*DeleteDeployRsp)(nil),       // 8: project.deleteDeployRsp
	(*timestamppb.Timestamp)(nil), // 9: google.protobuf.Timestamp
}
var file_deploy_proto_depIdxs = []int32{
	9, // 0: project.Deploy.createdTime:type_name -> google.protobuf.Timestamp
	9, // 1: project.Deploy.updatedTime:type_name -> google.protobuf.Timestamp
	0, // 2: project.getDeployRsp.result:type_name -> project.Deploy
	0, // 3: project.addDeployRsp.result:type_name -> project.Deploy
	0, // 4: project.updateDeployReq.payload:type_name -> project.Deploy
	1, // 5: project.depoly.getDepoly:input_type -> project.getDeployReq
	3, // 6: project.depoly.addDeploy:input_type -> project.addDeployReq
	5, // 7: project.depoly.updateDeploy:input_type -> project.updateDeployReq
	7, // 8: project.depoly.deleteDeploy:input_type -> project.deleteDeployReq
	2, // 9: project.depoly.getDepoly:output_type -> project.getDeployRsp
	4, // 10: project.depoly.addDeploy:output_type -> project.addDeployRsp
	6, // 11: project.depoly.updateDeploy:output_type -> project.updateDeployRsp
	8, // 12: project.depoly.deleteDeploy:output_type -> project.deleteDeployRsp
	9, // [9:13] is the sub-list for method output_type
	5, // [5:9] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_deploy_proto_init() }
func file_deploy_proto_init() {
	if File_deploy_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_deploy_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Deploy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deploy_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeployReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deploy_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeployRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deploy_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddDeployReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deploy_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddDeployRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deploy_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDeployReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deploy_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDeployRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deploy_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDeployReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deploy_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDeployRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_deploy_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_deploy_proto_goTypes,
		DependencyIndexes: file_deploy_proto_depIdxs,
		MessageInfos:      file_deploy_proto_msgTypes,
	}.Build()
	File_deploy_proto = out.File
	file_deploy_proto_rawDesc = nil
	file_deploy_proto_goTypes = nil
	file_deploy_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DepolyClient is the client API for Depoly service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DepolyClient interface {
	GetDepoly(ctx context.Context, in *GetDeployReq, opts ...grpc.CallOption) (*GetDeployRsp, error)
	AddDeploy(ctx context.Context, in *AddDeployReq, opts ...grpc.CallOption) (*AddDeployRsp, error)
	UpdateDeploy(ctx context.Context, in *UpdateDeployReq, opts ...grpc.CallOption) (*UpdateDeployRsp, error)
	DeleteDeploy(ctx context.Context, in *DeleteDeployReq, opts ...grpc.CallOption) (*DeleteDeployRsp, error)
}

type depolyClient struct {
	cc grpc.ClientConnInterface
}

func NewDepolyClient(cc grpc.ClientConnInterface) DepolyClient {
	return &depolyClient{cc}
}

func (c *depolyClient) GetDepoly(ctx context.Context, in *GetDeployReq, opts ...grpc.CallOption) (*GetDeployRsp, error) {
	out := new(GetDeployRsp)
	err := c.cc.Invoke(ctx, "/project.depoly/getDepoly", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *depolyClient) AddDeploy(ctx context.Context, in *AddDeployReq, opts ...grpc.CallOption) (*AddDeployRsp, error) {
	out := new(AddDeployRsp)
	err := c.cc.Invoke(ctx, "/project.depoly/addDeploy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *depolyClient) UpdateDeploy(ctx context.Context, in *UpdateDeployReq, opts ...grpc.CallOption) (*UpdateDeployRsp, error) {
	out := new(UpdateDeployRsp)
	err := c.cc.Invoke(ctx, "/project.depoly/updateDeploy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *depolyClient) DeleteDeploy(ctx context.Context, in *DeleteDeployReq, opts ...grpc.CallOption) (*DeleteDeployRsp, error) {
	out := new(DeleteDeployRsp)
	err := c.cc.Invoke(ctx, "/project.depoly/deleteDeploy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DepolyServer is the server API for Depoly service.
type DepolyServer interface {
	GetDepoly(context.Context, *GetDeployReq) (*GetDeployRsp, error)
	AddDeploy(context.Context, *AddDeployReq) (*AddDeployRsp, error)
	UpdateDeploy(context.Context, *UpdateDeployReq) (*UpdateDeployRsp, error)
	DeleteDeploy(context.Context, *DeleteDeployReq) (*DeleteDeployRsp, error)
}

// UnimplementedDepolyServer can be embedded to have forward compatible implementations.
type UnimplementedDepolyServer struct {
}

func (*UnimplementedDepolyServer) GetDepoly(context.Context, *GetDeployReq) (*GetDeployRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDepoly not implemented")
}
func (*UnimplementedDepolyServer) AddDeploy(context.Context, *AddDeployReq) (*AddDeployRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddDeploy not implemented")
}
func (*UnimplementedDepolyServer) UpdateDeploy(context.Context, *UpdateDeployReq) (*UpdateDeployRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDeploy not implemented")
}
func (*UnimplementedDepolyServer) DeleteDeploy(context.Context, *DeleteDeployReq) (*DeleteDeployRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteDeploy not implemented")
}

func RegisterDepolyServer(s *grpc.Server, srv DepolyServer) {
	s.RegisterService(&_Depoly_serviceDesc, srv)
}

func _Depoly_GetDepoly_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeployReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DepolyServer).GetDepoly(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/project.depoly/GetDepoly",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DepolyServer).GetDepoly(ctx, req.(*GetDeployReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Depoly_AddDeploy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddDeployReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DepolyServer).AddDeploy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/project.depoly/AddDeploy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DepolyServer).AddDeploy(ctx, req.(*AddDeployReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Depoly_UpdateDeploy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDeployReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DepolyServer).UpdateDeploy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/project.depoly/UpdateDeploy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DepolyServer).UpdateDeploy(ctx, req.(*UpdateDeployReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Depoly_DeleteDeploy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDeployReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DepolyServer).DeleteDeploy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/project.depoly/DeleteDeploy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DepolyServer).DeleteDeploy(ctx, req.(*DeleteDeployReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Depoly_serviceDesc = grpc.ServiceDesc{
	ServiceName: "project.depoly",
	HandlerType: (*DepolyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getDepoly",
			Handler:    _Depoly_GetDepoly_Handler,
		},
		{
			MethodName: "addDeploy",
			Handler:    _Depoly_AddDeploy_Handler,
		},
		{
			MethodName: "updateDeploy",
			Handler:    _Depoly_UpdateDeploy_Handler,
		},
		{
			MethodName: "deleteDeploy",
			Handler:    _Depoly_DeleteDeploy_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "deploy.proto",
}
