// Code generated by goctl. DO NOT EDIT!
// Source: deploy.proto

package depoly

import (
	"context"

	"e5Code-Service/service/project/rpc/project"

	"github.com/tal-tech/go-zero/zrpc"
)

type (
	Deploy          = project.Deploy
	AddDeployReq    = project.AddDeployReq
	UpdateDeployRsp = project.UpdateDeployRsp
	GetDeployReq    = project.GetDeployReq
	GetDeployRsp    = project.GetDeployRsp
	AddDeployRsp    = project.AddDeployRsp
	UpdateDeployReq = project.UpdateDeployReq
	DeleteDeployReq = project.DeleteDeployReq
	DeleteDeployRsp = project.DeleteDeployRsp

	Depoly interface {
		GetDepoly(ctx context.Context, in *GetDeployReq) (*GetDeployRsp, error)
		AddDeploy(ctx context.Context, in *AddDeployReq) (*AddDeployRsp, error)
		UpdateDeploy(ctx context.Context, in *UpdateDeployReq) (*UpdateDeployRsp, error)
		DeleteDeploy(ctx context.Context, in *DeleteDeployReq) (*DeleteDeployRsp, error)
	}

	defaultDepoly struct {
		cli zrpc.Client
	}
)

func NewDepoly(cli zrpc.Client) Depoly {
	return &defaultDepoly{
		cli: cli,
	}
}

func (m *defaultDepoly) GetDepoly(ctx context.Context, in *GetDeployReq) (*GetDeployRsp, error) {
	client := project.NewDepolyClient(m.cli.Conn())
	return client.GetDepoly(ctx, in)
}

func (m *defaultDepoly) AddDeploy(ctx context.Context, in *AddDeployReq) (*AddDeployRsp, error) {
	client := project.NewDepolyClient(m.cli.Conn())
	return client.AddDeploy(ctx, in)
}

func (m *defaultDepoly) UpdateDeploy(ctx context.Context, in *UpdateDeployReq) (*UpdateDeployRsp, error) {
	client := project.NewDepolyClient(m.cli.Conn())
	return client.UpdateDeploy(ctx, in)
}

func (m *defaultDepoly) DeleteDeploy(ctx context.Context, in *DeleteDeployReq) (*DeleteDeployRsp, error) {
	client := project.NewDepolyClient(m.cli.Conn())
	return client.DeleteDeploy(ctx, in)
}
